# These development/test/demo environment variables are committed so that this project works with minimal configuration.
# As such, production environment should be kept private and out of any public repositories.

# This is used by Docker Compose to set up prefix names for Docker images,
# containers, volumes and networks. This ensures that everything is named
# consistently regardless of your folder structure.
COMPOSE_PROJECT_NAME=jfmk_auth

# Used to tag emails
APP_NAME=jfmk_auth

# What Rails environment are we in? Puma uses RACK_ENV so make the same value.
RAILS_ENV=development

# For Puma should be set RACK_ENV to either 'development' or 'production'.
# Not entirely sure if this value matters for Puma though b/c we set config/puma.rb vars from ENV.
RACK_ENV=development

# Rails log level.
#   Accepted values: debug, info, warn, error, fatal, or unknown
LOG_LEVEL=debug

# You would typically use `rails secret` to generate a secure token.
# It is critical that you keep this value private in  production.
SECRET_KEY_BASE=15316aa06c804bafa0fee7aa8f40cd6d204ddccf5fb452cea1e64ce7e802e50492bc4928e0ec7a086582ef12045f9bd947aa953f7ed096bb03517143419ad031

# More details about these Puma variables can be found in config/puma.rb.
# Which address should the Puma app server bind to?
BIND_ON=0.0.0.0
# Heroku will override PORT
PORT=3000

# Puma supports multiple threads but in development mode you'll want to use 1
# thread to ensure that you can properly debug your application.
RAILS_MAX_THREADS=1

# Puma supports multiple workers but you should stick to 1 worker in dev mode.
WEB_CONCURRENCY=1

# Requests that exceed 5 seconds will be terminated and dumped to a stacktrace.
# Feel free to modify this value to fit the needs of your project, but if you
# have any request that takes more than 5 seconds you probably need to re-think
# what you are doing 99.99% of the time.
REQUEST_TIMEOUT=5

# The database name will automatically get the Rails environment appended to it
# such as: jfmk_auth_development or jfmk_auth_production.
DATABASE_URL=postgresql://jfmk_auth:yourpassword@postgres:5432/jfmk_auth?encoding=utf8&pool=5&timeout=5000

# The full Redis URL for the Redis cache. The last segment is the namespace.
REDIS_CACHE_URL=redis://:yourpassword@redis:6379/0/cache

# Action mailer (e-mail) settings.
# You will need to enable less secure apps in your Google account if you plan
# to use GMail as your e-mail SMTP server.
# You can do that here: https://www.google.com/settings/security/lesssecureapps
SMTP_ADDRESS=smtp.gmail.com
SMTP_PORT=587
SMTP_DOMAIN=gmail.com
SMTP_USERNAME=you@gmail.com
SMTP_PASSWORD=yourpassword
SMTP_AUTH=plain
SMTP_ENABLE_STARTTLS_AUTO=true

# Not running Docker natively? Replace 'localhost' with your Docker Machine IP
# address, such as: 192.168.99.100:3000
ACTION_MAILER_HOST=localhost:3000
ACTION_MAILER_DEFAULT_FROM=you@gmail.com
ACTION_MAILER_DEFAULT_TO=you@gmail.com

# Google Analytics universal ID. You should only set this in non-development
# environments. You wouldn't want to track development mode requests in GA.
GOOGLE_ANALYTICS_UA=example-GA-tag

# The full Redis URL for Active Job.
ACTIVE_JOB_URL=redis://:yourpassword@redis:6379/0

# The queue prefix for all Active Jobs. The Rails environment will
# automatically be added to this value.
ACTIVE_JOB_QUEUE_PREFIX=jfmk_auth:jobs

# The full Redis URL for Action Cable's back-end.
ACTION_CABLE_BACKEND_URL=redis://:yourpassword@redis:6379/0

# The full WebSocket URL for Action Cable's front-end.
# Not running Docker natively? Replace 'localhost' with your Docker Machine IP
# address, such as: ws://192.168.99.100:28080
ACTION_CABLE_FRONTEND_URL=ws://localhost:28080

# Comma separated list of RegExp origins to allow connections from.
# These values will be converted into a proper RegExp, so omit the / /.
#
# Examples:
#   http:\/\/localhost*
#   http:\/\/example.*,https:\/\/example.*
#
# Not running Docker natively? Replace 'localhost' with your Docker Machine IP
# address, such as: http:\/\/192.168.99.100*
ACTION_CABLE_ALLOWED_REQUEST_ORIGINS=http:\/\/localhost*

# Site content
SITE_TITLE=Site Title
SITE_OWNER=Site Owner

# Demo mode. Set =1 to enable.
IS_DEMO_MODE=0

# AWS credentials
AWS_ACCESS_KEY=
AWS_SECRET_ACCESS_KEY=
AWS_REGION=us-west-2

# S3 content params
CONTENT_S3_INDEX_PAGE_BUCKET=auth-web-demo-private
CONTENT_S3_INDEX_PAGE_KEY=portfolio_base/index.html
CONTENT_S3_INDEX_PAGE_BASE=//s3-us-west-2.amazonaws.com/auth-web-demo-public/portfolio_base/
CONTENT_S3_ASSETS_BUCKET=auth-web-demo-public
CONTENT_S3_ASSETS_REGEXP_BUCKET_PATH=s3-us-west-2\.amazonaws\.com\/auth-web-demo-public\/
CONTENT_S3_ASSETS_KEY_PREFIX=blob
